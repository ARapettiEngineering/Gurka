#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <ctime>

using namespace std;

void startScreen();
void dealCards(int numPlayers, int numCards, int displayPlayer);
void game(int numPlayers, int numCards, int displayPlayer);

int main() {
    int numPlayers = 3; // Number of players
    int numCards = 7;   // Number of cards per player
    int displayPlayer = 1; //Chooses which player to display the cards of
    startScreen();
    dealCards(numPlayers, numCards, displayPlayer);
    game(numPlayers, numCards, displayPlayer);
    return 0;
}

// This program displays a start screen with the word "GURKA" in a stylized format
void startScreen() {
    cout << "__________________________________________________" << endl;
    cout << "|                                                |" << endl;
    cout << "|  GGGGG   U     U  RRRRRR   K    K       A      |" << endl;
    cout << "| G     G  U     U  R     R  K   K       A A     |" << endl;
    cout << "| G        U     U  RRRRRR   KKKK       A   A    |" << endl;
    cout << "| G  GGGG  U     U  R    R   K  K      AAAAAAA   |" << endl;
    cout << "| G     G  U     U  R     R  K   K    A       A  |" << endl;
    cout << "|  GGGGG    UUUUU   R     R  K    K  A         A |" << endl;
    cout << "|________________________________________________|" << endl;
    cout << endl << "Please Press Enter to Start" << endl;
    cin.ignore(); // Wait for user input to proceed
}

void dealCards(int numPlayers, int numCards, int displayPlayer) {
    vector<string> deck;
    string suits[4] = {"Hearts", "Diamonds", "Clubs", "Spades"};
    string values[13] = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A"};

    // Create a deck of cards
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 13; j++) {
            deck.push_back(values[j] + " of " + suits[i]);
        }
    }

    // Check if there are enough cards
    if (numPlayers * numCards > deck.size()) {
        cout << "Not enough cards in the deck to deal!" << endl;
        return;
    }

    // Shuffle the deck manually
    srand(time(0));
    for (size_t i = 0; i < deck.size(); i++) {
        size_t j = i + rand() % (deck.size() - i); // Random index
        swap(deck[i], deck[j]); // Swap cards
    }

    // Deal cards to players
    for (int player = 0; player < numPlayers; player++) {
        if (player + 1 == displayPlayer) {
            cout << "Player " << player + 1 << "'s cards:" << endl;
        }
        for (int card = 0; card < numCards; card++) {
            if (!deck.empty()) {
                if (player + 1 == displayPlayer) {
                    cout << deck.back() << endl; // Display only the specified player's cards
                }
                deck.pop_back();
            }
        }
        if (player + 1 == displayPlayer) {
            cout << endl;
        }
    }
}
void game(int numPlayers, int numCards, int displayPlayer) {
    // Informs the user to make a choice
    cout << "Please choose a card by entering a number 1-7 representing each slot" << endl;
    cin >> userChoice; // Get user input for card choice
}
